//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include "Unit2.h"
#include "Unit3.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
AnsiString nazwa_pliku="";
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------metody Menu -------------------------------------
void __fastcall TForm1::Otwrzctrlo1Click(TObject *Sender)
{
		 if (OpenDialog1->Execute()) {
			try {
					karta->Lines->LoadFromFile(OpenDialog1->FileName);
					nazwa_pliku = OpenDialog1->FileName;
				} catch (...) {
					ShowMessage("Nie ma takiego pliku.");
				}

		 }
}

void __fastcall TForm1::Zapiszjako1Click(TObject *Sender)
{
 if (SaveDialog1->Execute()) {
			try {
					karta->Lines->SaveToFile(SaveDialog1->FileName);
                    nazwa_pliku = SaveDialog1->FileName;
				} catch (...) {
					ShowMessage("Nie mo¿na zapisaæ pliku.");
				}

		 }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Zapiszctrls1Click(TObject *Sender)
{
	if(nazwa_pliku!=""){
		 karta->Lines->SaveToFile(nazwa_pliku);
	} else {
        Form1->Zapiszjako1Click(MainMenu1);
    }


}
//---------------------------------------------------------------------------

void __fastcall TForm1::Nowyctrln1Click(TObject *Sender)
{
	if(MessageBox(NULL, L"Utworzyæ nowy plik?", L"PotwierdŸ",
		MB_YESNOCANCEL | MB_ICONQUESTION) == IDYES)

		{
			karta->Lines->Clear();
			nazwa_pliku="";
		}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::kartaKeyDown(TObject *Sender, WORD &Key, TShiftState Shift)
{
	   if(Shift.Contains(ssCtrl)) {

			if((Key == 's') || (Key == 'S')) {
			   Form1->Zapiszctrls1Click(MainMenu1);
			}else if ((Key == 'n') || (Key == 'N')) {
				Form1->Nowyctrln1Click(MainMenu1);
			}
			else if ((Key == 'o') || (Key == 'O')) {
				Form1->Otwrzctrlo1Click(MainMenu1);
			}
			else if ((Key == 'e') || (Key == 'E')) {
				Form1->Zakoczctrle1Click(MainMenu1);
			}
			else if ((Key == 'z') || (Key == 'Z')) {
				Form1->Zakoczctrle1Click(MainMenu1);
			}

       }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Zakoczctrle1Click(TObject *Sender)
{

	if(MessageBox(NULL, L"Czy na pewno zakoñczyæ program?", L"PotwierdŸ",
		MB_YESNO | MB_ICONQUESTION) == IDYES)

		{
		   Application->Terminate();
		}


}
//---------------------------------------------------------------------------

void __fastcall TForm1::FormClose(TObject *Sender, TCloseAction &Action)
{
	if(MessageBox(NULL, L"Czy na pewno zakoñczyæ program?", L"PotwierdŸ",
		MB_YESNO | MB_ICONQUESTION) == IDNO)

		{
		   Action = caNone;
		}

}
//---------------------------------------------------------------------------

void __fastcall TForm1::Wytnijctrlc1Click(TObject *Sender)
{
       karta->CutToClipboard();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Kopiujctrlc1Click(TObject *Sender)
{
    karta->CopyToClipboard();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Wklejctrlv1Click(TObject *Sender)
{
     karta->PasteFromClipboard();
}
//---------------------------------------------------------------------------



void __fastcall TForm1::Zawijaniewierszy1Click(TObject *Sender)
{
	if( Zawijaniewierszy1->Checked==true)
	{
		Zawijaniewierszy1->Checked=false;
		karta->WordWrap=false;
		karta->ScrollBars=ssBoth;
	} else {
		Zawijaniewierszy1->Checked=true;
		karta->WordWrap=true;
		karta->ScrollBars = ssVertical;
    }
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Czcionka1Click(TObject *Sender)
{
	if(FontDialog1->Execute())
	{
		karta->Font->Name = FontDialog1->Font->Name;
		karta->Font->Color = FontDialog1->Font->Color;
		karta->Font->Size = FontDialog1->Font->Size;
        karta->Font->Style = FontDialog1->Font->Style;
    }
}
//---------------------------------------------------------------------------


void __fastcall TForm1::Oprogramie1Click(TObject *Sender)
{
    Form2->ShowModal();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Pomoconline1Click(TObject *Sender)
{
	ShellExecute(NULL, L"open", L"https://github.com/chaozu7", NULL, NULL, SW_SHOWNORMAL);
}



void __fastcall TForm1::Cofnijctrlz1Click(TObject *Sender)
{
    karta->Undo();
}
//---------------------------------------------------------------------------
// testy:
//-----------------------------dodawanie karty-------------------------------


void dodajZakladke(TPageControl *pc) {
	TDocument *Dokument = new TDocument(pc);
};

//---------------------------------------------------------------------------

 void __fastcall TForm1::btnClick(TObject *Sender)
{
/*	TTabSheet *Zakladka = new TTabSheet(PageControl1);
	Zakladka->PageControl = PageControl1;
   	Zakladka->Caption = AnsiString("Nowa zakladka");
	TRichEdit *RichEdit;
	RichEdit = new TRichEdit(Zakladka);
	RichEdit->Parent = Zakladka;
	RichEdit->Align = alClient;
	RichEdit->ScrollBars = ssBoth;
	RichEdit->WordWrap = false;
	RichEdit->Color = clBlack;
	RichEdit->Font->Color = clWhite;
	RichEdit->Font->Size = 14;
											 */

};


 /*

   void __fastcall UpdateActivePage();
 */
//--------------- liczenie znaków --------------------

/*

TStringList *Tokenize (String s,String delimiter)
{
TStringList *StringList;
int l; //length of s
int start,delimp;
String sub;
StringList = new TStringList();
start=0;
if (s.Pos(delimiter)>0)
{
delimp = s.Pos(delimiter);
do
{
l=s.Length();
sub=s.SubString(start,delimp-1);
if (sub != "") StringList->Add(sub);
s=s.SubString(delimp+1,l-delimp);
delimp = s.Pos(delimiter);
} while (delimp != 0);
StringList->Add(s); // dodanie tego co zosta³o na koñcu
}
else StringList->Add(s);
return StringList;
}

	   */

	   /*
	   - s = char i++;
	   - w = if char == "" i++
	   - zd = if char == '.' i++
	   - ak = if char == "\n" i++             */
